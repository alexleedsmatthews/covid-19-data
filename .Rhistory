# set working directory to the folder containing this script
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
# load required packages
library(ggplot2)
library(readr)
library(dplyr)
library(scales)
library(tidyverse)
library(gganimate)
library(lubridate)
library(gifski)
library(png)
library(stringr)
library(RColorBrewer)
mask_use_by_county <- read_csv("Documents/covid-19-data/mask-use/mask-use-by-county.csv",
col_types = cols(ALWAYS = col_number(),
FREQUENTLY = col_number(), NEVER = col_number(),
RARELY = col_number(), SOMETIMES = col_number()))
# load required packages
library(ggplot2)
# set working directory to the folder containing this script
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
mask_use_by_county <- read_csv("Documents/covid-19-data/mask-use/mask-use-by-county.csv",
col_types = cols(ALWAYS = col_number(),
FREQUENTLY = col_number(), NEVER = col_number(),
RARELY = col_number(), SOMETIMES = col_number()))
mask_use_by_county <- read_csv("Documents/covid-19-data/mask-use/mask-use-by-county.csv",
col_types = cols(ALWAYS = col_number(),
FREQUENTLY = col_number(), NEVER = col_number(),
RARELY = col_number(), SOMETIMES = col_number()))
View(mask_use_by_county)
mask_use_by_county <- read_csv("~/Documents/covid-19-data/mask-use/mask-use-by-county.csv",
col_types = cols(ALWAYS = col_number(),
FREQUENTLY = col_number(), NEVER = col_number(),
RARELY = col_number(), SOMETIMES = col_number()))
install.packages("tidycensus")
library(tidycensus)
install.packages("tigris")
library(tigris)
v17 <- load_variables(2017, "acs5", cache = TRUE)
View(v17)
install.packages("tidycensus")
library(tidycensus)
library(tidycensus)
v17 <- load_variables(2017, "acs5", cache = TRUE)
# set working directory to the folder containing this script
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
# load required packages
library(ggplot2)
library(readr)
library(dplyr)
library(scales)
library(tidyverse)
library(gganimate)
library(lubridate)
library(gifski)
library(png)
library(stringr)
library(RColorBrewer)
install.packages(c("ggplot2", "readr", "dplyr", "scales", "tidyverse", "gganimate", "lubridate", "gifski", "png", "stringr", "RColorBrewer"))
# load required packages
library(ggplot2)
library(readr)
library(dplyr)
library(scales)
library(tidyverse)
library(gganimate)
library(lubridate)
library(gifski)
library(png)
library(stringr)
library(RColorBrewer)
install.packages(c("dplyr", "gganimate", "ggplot2", "gifski", "lubridate", "png", "RColorBrewer", "readr", "rstudioapi", "scales", "stringr", "tidycensus", "tidyverse", "tigris"))
install.packages(c("dplyr", "gganimate", "ggplot2", "gifski", "lubridate", "png", "RColorBrewer", "readr", "rstudioapi", "scales", "stringr", "tidycensus", "tidyverse", "tigris"))
install.packages(c("dplyr", "gganimate", "ggplot2", "gifski", "lubridate", "png", "RColorBrewer", "readr", "rstudioapi", "scales", "stringr", "tidycensus", "tidyverse", "tigris"))
install.packages(c("dplyr", "gganimate", "ggplot2", "gifski", "lubridate", "png", "RColorBrewer", "readr", "rstudioapi", "scales", "stringr", "tidycensus", "tidyverse", "tigris"))
install.packages(c("dplyr", "gganimate", "ggplot2", "gifski", "lubridate", "png", "RColorBrewer", "readr", "rstudioapi", "scales", "stringr", "tidycensus", "tidyverse", "tigris"))
install.packages(c("dplyr", "gganimate", "ggplot2", "gifski", "lubridate", "png", "RColorBrewer", "readr", "rstudioapi", "scales", "stringr", "tidycensus", "tidyverse", "tigris"))
install.packages(c("dplyr", "gganimate", "ggplot2", "gifski", "lubridate", "png", "RColorBrewer", "readr", "rstudioapi", "scales", "stringr", "tidycensus", "tidyverse", "tigris"))
install.packages(c("dplyr", "gganimate", "ggplot2", "gifski", "lubridate", "png", "RColorBrewer", "readr", "rstudioapi", "scales", "stringr", "tidycensus", "tidyverse", "tigris"))
install.packages(c("dplyr", "gganimate", "ggplot2", "gifski", "lubridate", "png", "RColorBrewer", "readr", "rstudioapi", "scales", "stringr", "tidycensus", "tidyverse", "tigris"))
install.packages(c("dplyr", "gganimate", "ggplot2", "gifski", "lubridate", "png", "RColorBrewer", "readr", "rstudioapi", "scales", "stringr", "tidycensus", "tidyverse", "tigris"))
install.packages(c("dplyr", "gganimate", "ggplot2", "gifski", "lubridate", "png", "RColorBrewer", "readr", "rstudioapi", "scales", "stringr", "tidycensus", "tidyverse", "tigris"))
install.packages(c("dplyr", "gganimate", "ggplot2", "gifski", "lubridate", "png", "RColorBrewer", "readr", "rstudioapi", "scales", "stringr", "tidycensus", "tidyverse", "tigris"))
install.packages(c("dplyr", "gganimate", "ggplot2", "gifski", "lubridate", "png", "RColorBrewer", "readr", "rstudioapi", "scales", "stringr", "tidycensus", "tidyverse", "tigris"))
install.packages(c("dplyr", "gganimate", "ggplot2", "gifski", "lubridate", "png", "RColorBrewer", "readr", "rstudioapi", "scales", "stringr", "tidycensus", "tidyverse", "tigris"))
install.packages(c("dplyr", "gganimate", "ggplot2", "gifski", "lubridate", "png", "RColorBrewer", "readr", "rstudioapi", "scales", "stringr", "tidycensus", "tidyverse", "tigris"))
# set working directory to the folder containing this script
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
library(ggplot2)
library(readr)
library(dplyr)
library(scales)
library(tidyverse)
library(gganimate)
library(lubridate)
library(gifski)
library(png)
library(stringr)
library(RColorBrewer)
mask_use_by_county <- read_csv("~/Documents/covid-19-data/mask-use/mask-use-by-county.csv",
col_types = cols(ALWAYS = col_number(),
FREQUENTLY = col_number(), NEVER = col_number(),
RARELY = col_number(), SOMETIMES = col_number()))
View(mask_use_by_county)
install.packages("tidycensus")
library(tidycensus)
install.packages("tigris")
library(tigris)
install.packages("tigris")
v17 <- load_variables(2017, "acs5", cache = TRUE)
View(v17)
mask_compliance <- mask_use_by_county %>%
mutate(MASKERS = (sum(FREQUENTLY,ALWAYS))/100)
View(mask_compliance)
mutate(COMPLIANT = (sum("FREQUENTLY","ALWAYS"))
View(mask_compliance)
View(mask_compliance)
mutate(COMPLIANT = (sum("FREQUENTLY","ALWAYS"))
mask_compliance <- mask_use_by_county %>%
mutate(COMPLIANT = FREQUENTLY)
mask_compliance <- mask_use_by_county %>%
mutate(COMPLIANT = "FREQUENTLY")
View(mask_compliance)
mutate(COMPLIANT = sum(FREQUENTLY, ALWAYS)
View(mask_compliance)
View(mask_compliance)
mask_compliance <- mask_use_by_county %>%
mutate(COMPLIANT = sumrow(FREQUENTLY, ALWAYS))
mask_compliance <- mask_use_by_county %>%
mutate(COMPLIANT = rowSums(FREQUENTLY, ALWAYS))
mask_compliance <- mask_use_by_county %>%
mutate(sum = rowSums(FREQUENTLY, ALWAYS))
mask_compliance <- mask_use_by_county %>%
mask_compliance$COMPLIANT = mask_compliance$FREQUENTLY + mask_compliance$ALWAYS
mask_compliance <- mask_use_by_county %>%
mask_use_by_county$COMPLIANT = mask_use_by_county$FREQUENTLY + mask_use_by_county$ALWAYS
mask_use_by_county <- mask_use_by_county %>%
mask_use_by_county$COMPLIANT = mask_use_by_county$FREQUENTLY + mask_use_by_county$ALWAYS
mask_use_by_county$COMPLIANT <- mask_use_by_county$FREQUENTLY + mask_use_by_county$ALWAYS
View(mask_use_by_county)
mask_use_by_county$NON-COMPLIANT <- mask_use_by_county$RARELY + mask_use_by_county$NEVER
mask_use_by_county$NONCOMPLIANT <- mask_use_by_county$RARELY + mask_use_by_county$NEVER
county_level <- get_acs(geography = "county",
year = 2017,
geometry = TRUE,
cb = FALSE,
shift_geo = TRUE)
require(dplyr)
require(tigris)
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
require(dplyr)
require(tigris)
require(covid19nytimes)
install.packages("covid19nytimes")
require(sf)
require(covid19nytimes)
covid19nytimes_states <- refresh_covid19nytimes_states() %>%
filter(date == max(date))
covid19nytimes_counties <- refresh_covid19nytimes_counties()%>%
filter(date == max(date))
# update state and county data using covid19nytimes package
covid19nytimes_states <- refresh_covid19nytimes_states() %>%
filter(date == max(date))
covid19nytimes_counties <- refresh_covid19nytimes_counties()%>%
filter(date == max(date))
View(covid19nytimes_counties)
state_data <- refresh_covid19nytimes_states()
View(state_data)
# setting up a county map
county_map <- counties(cb = TRUE, resolution = '20m', class = "sf") %>%
st_centroid()
# making maps
county_map <- counties(cb = TRUE, resolution = '20m', class = "sf") %>%
st_centroid()
state_map <- states(cb = TRUE, resolution = '5m', class = "sf")
View(county_map)
View(mask_use_by_county)
View(county_map)
View(mask_use_by_county)
View(county_map)
View(mask_use_by_county)
county_lookup <- county_map %>%
as_tibble() %>%
select(STATEFP, GEOID) %>%
rename (COUNTYFP = GEOID)
View(county_lookup)
county_lookup <- mask_use_by_county %>%
as_tibble() %>%
select(COUNTYFP, COMPLIANT) %>%
rename (GEOID = COUNTYFP)
View(county_lookup)
state_lookup <- state_map %>%
as_tibble() %>%
select(STATEFP, NAME) %>%
rename(STATE_NAME = NAME)
filter_out <- c("Alaska", "Hawaii", "Guam",
"Puerto Rico", "American Samoa",
"Commonwealth of the Northern Mariana Islands",
"Virgin Islands")
covid19nytimes_states <- covid19nytimes_states %>%
filter(!(location %in% filter_out)) %>%
filter(location != "Unknown")
View(county_map)
View(county_lookup)
county_mask_map <- county_map %>%
left_join(county_lookup)
View(county_lookup)
View(county_mask_map)
) %>%
) %>%
county_mask_map <- county_map %>%
left_join(county_lookup) %>%
st_as_sf(crs = st_crs(county_map))
ggplot(county_mask_map) +
geom_sf(color = "white", size = 0.2, aes(fill = COMPLIANT)) +
scale_fill_distiller(palette = "Blues",
label = dollar,
direction = 1,
name = "Mask Compliance") +
theme_void()
ggplot(county_mask_map) +
geom_sf(color = "white", size = 0.2, aes(fill = COMPLIANT)) +
scale_fill_distiller(palette = "Blues",
direction = 1,
name = "Mask Compliance") +
theme_void()
ggplot(county_mask_map) +
geom_sf(color = "white", size = 0.2, aes(fill = COMPLIANT)) +
scale_fill_distiller(palette = "Blues",
direction = -1,
name = "Mask Compliance") +
theme_void()
county_mask_map2 <- county_map %>%
left_join(county_lookup) %>%
mutate(COMPLIANT = COMPLIANT*100) %>%
st_as_sf(crs = st_crs(county_map))
View(county_mask_map)
View(county_mask_map2)
ggplot(county_mask_map2) +
geom_sf(color = "white", size = 0.2, aes(fill = COMPLIANT)) +
scale_fill_distiller(palette = "Blues",
direction = 1,
name = "Mask Compliance") +
theme_void()
ggplot(county_mask_map) +
geom_sf(color = "black", size = 0.2, aes(fill = COMPLIANT)) +
scale_fill_distiller(palette = "Blues",
direction = 1,
name = "Mask Compliance") +
theme_void()
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
require(dplyr)
require(tigris)
require(sf)
require(covid19nytimes)
covid19nytimes_states <- refresh_covid19nytimes_states() %>%
filter(date == max(date))
covid19nytimes_counties <- refresh_covid19nytimes_counties()%>%
filter(date == max(date))
state_data <- refresh_covid19nytimes_states()
# making maps
county_map <- counties(cb = TRUE, resolution = '20m', class = "sf") %>%
st_centroid()
state_map <- states(cb = TRUE, resolution = '5m', class = "sf")
state_lookup <- state_map %>%
as_tibble() %>%
select(STATEFP, NAME) %>%
rename(STATE_NAME = NAME)
View(covid19nytimes_counties)
View(covid19nytimes_states)
covid19nytimes_states <- covid19nytimes_states %>%
filter(!(location %in% filter_out)) %>%
filter(location != "Unknown")
rlang::last_error()
covid19nytimes_counties <- covid19nytimes_counties %>%
filter(purrr::map_dbl(location, ~stringr::str_detect(., filter_out) %>% sum)==0) %>%
filter(location != "Unknown")
covid19nytimes_states <- covid19nytimes_states %>%
filter(!(location %in% filter_out)) %>%
filter(location != "Unknown")
filter_out <- c("Alaska", "Hawaii", "Guam",
"Puerto Rico", "American Samoa",
"Commonwealth of the Northern Mariana Islands",
"Virgin Islands")
covid19nytimes_states <- covid19nytimes_states %>%
filter(!(location %in% filter_out)) %>%
filter(location != "Unknown")
covid19nytimes_counties <- covid19nytimes_counties %>%
filter(purrr::map_dbl(location, ~stringr::str_detect(., filter_out) %>% sum)==0) %>%
filter(location != "Unknown")
county_map <- county_map %>%
left_join(state_lookup) %>%
filter(!(STATE_NAME %in% filter_out))
ggplot() +
geom_sf(data = state_map, fill = "lightgrey", color = "darkgrey") +
geom_sf_text(data = state_num_centroids, aes(label = value), color = "red",
size = 4, alpha = 0.7) +
geom_sf(data = joined_covid_counties,
mapping = aes(size = value),
shape = 21, alpha = 0.5, color = "red", fill = "pink") +
theme_void() +
scale_size_continuous(guide= "none",
range = c(0.05, 35)) +
coord_sf(crs = st_crs(2163)) #for that nice equal area curved look
library(ggplot2)
state_map <- state_map %>%
filter(!(NAME %in% filter_out))
state_num_centroids <- covid19nytimes_states %>%
filter(date == max(date)) %>%
filter(data_type == "cases_total") %>%
left_join(state_map,
by = c("location_code" = "STATEFP")) %>%
st_as_sf(crs = st_crs(state_map)) %>%
st_centroid()
View(covid19nytimes_states)
joined_covid_counties <- covid19nytimes_counties %>%
filter(data_type == "cases_total") %>%
left_join(county_map,
by = c("location_code" = "GEOID")) %>%
st_as_sf(crs = st_crs(county_map))
ggplot() +
geom_sf(data = state_map, fill = "lightgrey", color = "darkgrey") +
geom_sf_text(data = state_num_centroids, aes(label = value), color = "red",
size = 4, alpha = 0.7) +
geom_sf(data = joined_covid_counties,
mapping = aes(size = value),
shape = 21, alpha = 0.5, color = "red", fill = "pink") +
theme_void() +
scale_size_continuous(guide= "none",
range = c(0.05, 35)) +
coord_sf(crs = st_crs(2163)) #for that nice equal area curved look
ggplot() +
geom_sf(data = state_map, fill = "lightgrey", color = "darkgrey") +
geom_text(data = state_num_centroids, aes(label = value), color = "red",
size = 4, alpha = 0.7) +
geom_sf(data = joined_covid_counties,
mapping = aes(size = value),
shape = 21, alpha = 0.5, color = "red", fill = "pink") +
theme_void() +
scale_size_continuous(guide= "none",
range = c(0.05, 35)) +
coord_sf(crs = st_crs(2163)) #for that nice equal area curved look
ggplot() +
geom_sf(data = state_map, fill = "lightgrey", color = "darkgrey") +
geom_sf_text(data = state_num_centroids, aes(label = value), color = "red",
size = 4, alpha = 0.7) +
geom_sf(data = joined_covid_counties,
mapping = aes(size = value),
shape = 21, alpha = 0.5, color = "red", fill = "pink") +
theme_void() +
scale_size_continuous(guide= "none",
range = c(0.05, 35)) +
coord_sf(crs = st_crs(2163)) #for that nice equal area curved look
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
require(dplyr)
require(tigris)
require(sf)
require(covid19nytimes)
covid19nytimes_states <- refresh_covid19nytimes_states() %>%
filter(date == max(date))
covid19nytimes_states <- refresh_covid19nytimes_states() %>%
filter(date == max(date))
covid19nytimes_counties <- refresh_covid19nytimes_counties()%>%
filter(date == max(date))
View(covid19nytimes_states)
View(covid19nytimes_states)
library(readr)
us_states <- read_csv("us-states.csv", col_types = cols(date = col_date(format = "%Y-%m-%d")))
View(us_states)
us_states <- read_csv("us-states.csv", col_types = cols(date = col_date(format = "%Y-%m-%d")))
View(us_states)
# learning to create a new cases column
us_states$new_cases <- diff(c(0,us_states$cases))
View(us_states)
us_states <- read_csv("us-states.csv", col_types = cols(date = col_date(format = "%Y-%m-%d")))
View(us_states)
library(readr)
us <- read_csv("us.csv", col_types = cols(date = col_date(format = "%Y-%m-%d")))
View(us)
# read it in and create a new cases column
require(readr)
national_data <- read_csv("us.csv", col_types = cols(date = col_date(format = "%Y-%m-%d")))
View(us)
national_data$new_cases <- diff(c(0,national_data$cases))
View(us)
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
require(dplyr)
require(tigris)
require(sf)
require(covid19nytimes)
# read it in and create a new cases column
require(readr)
national_data <- read_csv("us.csv", col_types = cols(date = col_date(format = "%Y-%m-%d")))
View(us)
national_data$new_cases <- diff(c(0,national_data$cases))
View(national_data)
View(national_data)
View(national_data)
View(national_data)
# plot it as a column chart
ggplot(national data, aes(x = date, y = new_cases)) +
xlab("date") +
ylab("daily cases")
# plot it as a column chart
cases_chart <-  ggplot(national data, aes(x = date, y = new_cases)) +
xlab("date") +
ylab("Daily cases")
